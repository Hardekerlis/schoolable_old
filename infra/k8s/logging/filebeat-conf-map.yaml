# apiVersion: v1
# kind: Namespace
# metadata:
#   name: logging
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: filebeat-config
#   namespace: logging
#   labels:
#     k8s-app: filebeat
# data:
#   filebeat.yml: |-
#
#     # filebeat.inputs:
#     # - type: container
#     #   paths:
#     #     - /var/log/containers/*.log
#     #   processors:
#     #     - add_kubernetes_metadata:
#     #         host: ${NODE_NAME}
#     #         matchers:
#     #         - logs_path:
#     #             logs_path: "/var/log/containers/"
#     # To enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment this:
#
#     filebeat.autodiscover:
#      providers:
#        - type: kubernetes
#          node: ${NODE_NAME}
#          hints.enabled: true
#          hints.default_config:
#            type: container
#            paths:
#              - /var/log/containers/*${data.kubernetes.container.id}.log
#
#     output.elasticsearch:
#       hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
#       # username: ${ELASTICSEARCH_USERNAME}
#       # password: ${ELASTICSEARCH_PASSWORD}
#     # setup.kibana:
#     #   host: "http://kibana:5601/"
# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  # namespace: logging
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    # filebeat.config:
    # filebeat.inputs:
    # - type: container
    #   paths:
    #     - /var/log/containers/*.log
    #   processors:
    #     - add_kubernetes_metadata:
    #         host: ${NODE_NAME}
    #         matchers:
    #         - logs_path:
    #             logs_path: "/var/log/containers/"
    # To enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment this:
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          # include_annotations: ["artifact.spinnaker.io/name","ad.datadoghq.com/tags"]
          # include_labels: ["app.kubernetes.io/name"]
          labels.dedot: true
          annotations.dedot: true
          templates:
            - condition:
                equals:
                  kubernetes.namespace: default   #Set the namespace in which your app is running, can add multiple conditions in case of more than 1 namespace.
              config:
                - type: docker
                  paths:
                    - /var/log/containers/*${data.kubernetes.container.id}.log
                  containers.ids:
                    - "${data.kubernetes.container.id}"
                  multiline:
                    pattern: '^[A-Za-z ]+[0-9]{2} (?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)'   #Timestamp regex for the app logs. Change it as per format.
                    negate: true
                    match: after
            - condition:
                equals:
                  kubernetes.namespace: elasticsearch
              config:
                - type: docker
                  paths:
                    - /var/log/containers/*${data.kubernetes.container.id}.log
                  containers.ids:
                    - "${data.kubernetes.container.id}"
                  multiline:
                    pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}|^[0-9]{4}-[0-9]{2}-[0-9]{2}T'
                    negate: true
                    match: after

    processors:
      - add_cloud_metadata: ~
      - drop_fields:
          when:
            has_fields: ['kubernetes.labels.app']
          fields:
            - 'kubernetes.labels.app'

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
    #   username: ${ELASTICSEARCH_USERNAME}
    #   password: ${ELASTICSEARCH_PASSWORD}
    # setup.kibana:
    #   host: "http://kibana:5601/"
